<?php
/**
 * Local Configuration Override
 *
 * This configuration override file is for overriding environment-specific and
 * security-sensitive configuration information. Copy this file without the
 * .dist extension at the end and populate values as needed.
 *
 * @NOTE: This file is ignored from Git by default with the .gitignore included
 * in ZendSkeletonApplication. This is a good practice, as it prevents sensitive
 * credentials from accidentally being committed into version control.
 */

return array(
	//sensor configuration
	'sensor' => array(
		'class' => '\WateringSystem\Model\Sensors\Python', //A \WateringSystem\Model\Sensors class name
		'port'	=> '/dev/ttyACM0', //set the com port eg /dev/ttyACM0
		'timeout' => 3,
		'Python' => array(
			'script' => 'scripts/sensorstatus.py',
		),
		'File' => array(
			'bytesToRead' => '128', //number of bytes to read at a time
		),
	),
	//doctrine config
	'doctrine' => array(
		'connection' => array(
			'orm_default' => array(
				'driverClass' => 'Doctrine\DBAL\Driver\PDOMySql\Driver',
				'params' => array(
						'host'     => 'localhost',
						'port'     => '3306',
						'user'     => '',
						'password' => '',
						'dbname'   => '',
				)
			)
		),
		// Configuration details for the ORM.
		// See http://docs.doctrine-project.org/en/latest/reference/configuration.html
		'configuration' => array(
			// Configuration for service `doctrine.configuration.orm_default` service
			'orm_default' => array(
				// metadata cache instance to use. The retrieved service name will
				// be `doctrine.cache.$thisSetting`
				'metadata_cache'    => 'array',

				// DQL queries parsing cache instance to use. The retrieved service
				// name will be `doctrine.cache.$thisSetting`
				'query_cache'       => 'array',

				// ResultSet cache to use.  The retrieved service name will be
				// `doctrine.cache.$thisSetting`
				'result_cache'      => 'array',

				// Hydration cache to use.  The retrieved service name will be
				// `doctrine.cache.$thisSetting`
				'hydration_cache'   => 'array',

				// Mapping driver instance to use. Change this only if you don't want
				// to use the default chained driver. The retrieved service name will
				// be `doctrine.driver.$thisSetting`
				'driver'            => 'orm_default',
		
				// Generate proxies automatically (turn off for production)
				'generate_proxies'  => true,
		
				// directory where proxies will be stored. By default, this is in
				// the `data` directory of your application
				'proxy_dir'         => 'data/DoctrineORMModule/Proxy',
		
				// namespace for generated proxy classes
				'proxy_namespace'   => 'DoctrineORMModule\Proxy',
			)
		),
	),
);