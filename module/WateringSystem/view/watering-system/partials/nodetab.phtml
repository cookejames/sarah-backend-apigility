<?php
	//add the sensor readings js to the head
	$sensors = $this->sensors;
	if (count($sensors) == 0) return;
	$this->headscript()->prependFile($this->basePath() . '/js/partials/sensorreadings.js');
?>
<?php $this->headScript()->captureStart() //instantiate a sensor readings object?>
jQuery(document).ready(function($){
	$('<?php echo $this->container?>').find('.sensorReadings').sensorreadings({
		values: <?php echo $this->sensorToJson()->getSensorValuesJson($sensors); ?> 
	});
});
<?php $this->headScript()->captureEnd() ?>

<div class="sensorReadings">
<?php

	$id = $this->node->getId();
	//output the latest sensor values
	foreach ($this->sensors as $sensor) {
		//skip if sensor is disabled
		if (!$sensor->getIsEnabled()) continue;
		
		//clear at opening to fix margins when responsive
		if ($this->counter()->isFirstInColumn('clear'.$id, $this->columns)) echo '<div class="clearfix visible-xs"></div>';
		//open the column
		if ($this->counter()->isFirstInColumn('open'.$id, $this->columns)) echo '<div>';
			//output the sensor details
			echo '<div id="sensor' . $sensor->getId() . '"></div>';
		//close the row at the end of the column
		if ($this->counter()->isLastInColumn('close'.$id, $this->columns)) echo '</div>';
	}
	//close the last row if it wasn't the exact width
	if (!$this->counter()->isFirstInColumn('close'.$id, $this->columns)) echo '</div>';

?>
</div>
<?php 
	//output graph - temporary method until ajax is implemented
	$sensorValues = $this->sensorvalue()->lastDaysValues($this->node);
	echo $this->partial('watering-system/partials/sensorgraph.phtml', array('sensorValues' => $sensorValues, 'container' => $this->container));
?>